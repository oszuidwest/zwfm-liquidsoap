---
name: Build and Publish Docker Image

on:
  schedule:
    - cron: "0 3 * * *" # Run daily at 3:00 AM
  push:
    branches:
      - main
    paths:
      - "Dockerfile"
      - ".github/workflows/docker-image.yml"
  workflow_dispatch: # Allow manual trigger
    inputs:
      force_build:
        description: "Force build even if version exists"
        required: false
        default: "false"
        type: boolean

jobs:
  check-versions:
    runs-on: ubuntu-latest
    outputs:
      liquidsoap_version: ${{ steps.get_versions.outputs.liquidsoap_version }}
      odr_audioenc_version: ${{ steps.get_versions.outputs.odr_audioenc_version }}
      combined_tag: ${{ steps.get_versions.outputs.combined_tag }}
      new_version: ${{ steps.check_version.outputs.new_version }}
    steps:
      - name: Get Software Versions
        id: get_versions
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          LIQUIDSOAP_VERSION=$(gh api repos/savonet/liquidsoap/releases/latest --jq '.tag_name' | sed 's/v//')

          # Get ODR versions from our own build repository
          ODR_RELEASES=$(gh api repos/oszuidwest/zwfm-odrbuilds/releases)
          ODR_AUDIOENC_VERSION=$(echo "$ODR_RELEASES" | \
            jq -r 'map(select(.tag_name | startswith("odr-audioenc"))) | max_by(.created_at) | .tag_name' | \
            sed 's/odr-audioenc-v//')

          COMBINED_TAG="$LIQUIDSOAP_VERSION-$ODR_AUDIOENC_VERSION"

          echo "Latest Liquidsoap version: $LIQUIDSOAP_VERSION"
          echo "Latest ODR-AudioEnc version: $ODR_AUDIOENC_VERSION"
          echo "Combined tag: $COMBINED_TAG"

          echo "liquidsoap_version=$LIQUIDSOAP_VERSION" >> $GITHUB_OUTPUT
          echo "odr_audioenc_version=$ODR_AUDIOENC_VERSION" >> $GITHUB_OUTPUT
          echo "combined_tag=$COMBINED_TAG" >> $GITHUB_OUTPUT

      - name: Check if Version Exists in GHCR
        id: check_version
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          COMBINED_TAG="${{ steps.get_versions.outputs.combined_tag }}"
          FORCE_BUILD="${{ github.event.inputs.force_build }}"

          if [[ "$FORCE_BUILD" == "true" ]]; then
            echo "Force build enabled, proceeding with build regardless of version status"
            echo "new_version=true" >> $GITHUB_OUTPUT
            exit 0
          fi

          STATUS_CODE=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "Authorization: Bearer ${{ github.token }}" \
            "https://ghcr.io/v2/${{ github.repository }}/manifests/$COMBINED_TAG")

          if [ "$STATUS_CODE" == "404" ]; then
            echo "New version found: $COMBINED_TAG"
            echo "new_version=true" >> $GITHUB_OUTPUT
          else
            echo "Version already exists. Skipping build."
            echo "new_version=false" >> $GITHUB_OUTPUT
          fi

  build:
    needs: check-versions
    if: needs.check-versions.outputs.new_version == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Image
        uses: docker/build-push-action@v6
        id: docker_build
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          provenance: false
          build-args: |
            LIQUIDSOAP_VERSION=${{ needs.check-versions.outputs.liquidsoap_version }}
            ODR_AUDIOENC_VERSION=${{ needs.check-versions.outputs.odr_audioenc_version }}
          tags: |
            ghcr.io/${{ github.repository }}:${{ needs.check-versions.outputs.combined_tag }}
            ghcr.io/${{ github.repository }}:latest
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.created=${{ github.event.repository.updated_at }}
            org.opencontainers.image.revision=${{ github.sha }}
            liquidsoap.version=${{ needs.check-versions.outputs.liquidsoap_version }}
            odr-audioenc.version=${{ needs.check-versions.outputs.odr_audioenc_version }}

      - name: Build Summary
        run: |
          echo "## Build completed successfully" >> $GITHUB_STEP_SUMMARY
          echo "- **Combined Tag**: ${{ needs.check-versions.outputs.combined_tag }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Image**: ghcr.io/${{ github.repository }}:${{ needs.check-versions.outputs.combined_tag }}" \
            >> $GITHUB_STEP_SUMMARY
          echo "- **Digest**: ${{ steps.docker_build.outputs.digest }}" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ github.event.inputs.force_build }}" == "true" ]]; then
            echo "- **Force Build**: Enabled" >> $GITHUB_STEP_SUMMARY
          fi
